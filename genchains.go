//go:build ignore

package main

import (
	"bytes"
	"fmt"
	"go/format"
	"html/template"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"

	chain_selectors "github.com/smartcontractkit/chain-selectors"
)

const filename = "generated_chains.go"

type chain struct {
	EvmChainID uint64
	Selector   uint64
	Name       string
	VarName    string
}

var chainTemplate, _ = template.New("").Parse(`// Code generated by go generate please DO NOT EDIT
package chain_selectors

type Chain struct {
	EvmChainID uint64
	Selector   uint64
	Name       string
	VarName    string
}

var (
{{ range . }}
	{{.VarName}} = Chain{EvmChainID: {{ .EvmChainID }}, Selector: {{ .Selector }}, Name: "{{ .Name }}"}{{ end }}
)

var ALL = []Chain{
{{ range . }}{{ .VarName }},
{{ end }}
}

`)

func main() {
	src, err := genChainsSourceCode()
	if err != nil {
		panic(err)
	}

	formatted, err := format.Source([]byte(src))
	if err != nil {
		panic(err)
	}

	existingContent, err := os.ReadFile(filename)
	if err != nil {
		panic(err)
	}

	if string(existingContent) == string(formatted) {
		fmt.Println("no changes detected")
		return
	}

	err = os.WriteFile(filename, formatted, 0644)
	if err != nil {
		panic(err)
	}
}

func genChainsSourceCode() (string, error) {
	var wr = new(bytes.Buffer)
	chains := make([]chain, 0)

	for evmChainID, chainSel := range chain_selectors.EvmChainIdToChainSelector() {
		name, err := chain_selectors.NameFromChainId(evmChainID)
		if err != nil {
			return "", err
		}

		chains = append(chains, chain{
			EvmChainID: evmChainID,
			Selector:   chainSel,
			Name:       name,
			VarName:    toVarName(name, chainSel),
		})
	}

	sort.Slice(chains, func(i, j int) bool { return chains[i].VarName < chains[j].VarName })
	if err := chainTemplate.ExecuteTemplate(wr, "", chains); err != nil {
		return "", err
	}
	return wr.String(), nil
}

func toVarName(name string, chainSel uint64) string {
	const unnamed = "UNNAMED"
	x := strings.ReplaceAll(name, "-", "_")
	x = strings.ToUpper(x)
	if len(x) > 0 && unicode.IsDigit(rune(x[0])) {
		x = unnamed + "_" + x
	}
	if len(x) == 0 {
		x = unnamed + "_" + strconv.FormatUint(chainSel, 10)
	}
	return x
}
